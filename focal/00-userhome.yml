---
- hosts: all
  become: yes
  tasks:
    - name: application helpers
      apt:
        name:
        - apt-transport-https
        - pkg-config
        - git
        - upx-ucl
        state: latest
    - name: bin
      git:
        repo: "https://github.com/ppreeper/bin"
        dest: "{{lookup('env', 'HOME')}}/bin"
        update: yes
      become: yes
      become_user: "{{lookup('env', 'USER')}}"
    - name: go install
      command: "{{lookup('env', 'HOME')}}/bin/goup"
    - name: chmod mnt
      file:
        path: '/mnt'
        mode: '0777'
    - name: add bin dir
      file:
        path: "{{lookup('env', 'HOME')}}/bin"
        state: directory
        group: "{{lookup('env', 'USER')}}"
        owner: "{{lookup('env', 'USER')}}"
    - name: add app dir
      file:
        path: "{{lookup('env', 'HOME')}}/app"
        state: directory
        group: "{{lookup('env', 'USER')}}"
        owner: "{{lookup('env', 'USER')}}"
    - name: add mnt dir
      file:
        path: "{{lookup('env', 'HOME')}}/mnt"
        state: directory
        group: "{{lookup('env', 'USER')}}"
        owner: "{{lookup('env', 'USER')}}"
    - name: add .cfg dir
      file:
        path: "{{lookup('env', 'HOME')}}/.config/cfg"
        state: directory
        group: "{{lookup('env', 'USER')}}"
        owner: "{{lookup('env', 'USER')}}"
    - name: add alias cfg
      blockinfile:
        path: "{{lookup('env', 'HOME')}}/.config/cfg/aliases.cfg"
        create: yes
        marker: "# {mark} alias config"
        block: |
          alias update='sudo bash -c "apt update -y; apt -y full-upgrade; apt -y autoremove; apt -y autoclean; snap refresh; flatpak update"'
    - name: alias set ownership
      file:
        path: "{{lookup('env', 'HOME')}}/.config/cfg/aliases.cfg"
        group: "{{lookup('env', 'USER')}}"
        owner: "{{lookup('env', 'USER')}}"
    - name: add .cfg load bash
      blockinfile:
        path: "{{lookup('env', 'HOME')}}/.bashrc"
        create: yes
        marker: "# {mark} cfg loader"
        block: |
          for f in ${HOME}/.config/cfg/*cfg
          do
            source ${f}
          done
    # zsh
    - name: zsh
      apt:
        name:
        - zsh
        - zsh-autosuggestions
        - zsh-syntax-highlighting
        - autojump
        state: latest
    - name: zsh config directory
      file:
        path: "{{lookup('env', 'HOME')}}/.zsh"
        state: directory
        group: "{{lookup('env', 'USER')}}"
        owner: "{{lookup('env', 'USER')}}"
    - name: zsh pure theme
      git:
        repo: "https://github.com/sindresorhus/pure.git"
        dest: "{{lookup('env', 'HOME')}}/.zsh/pure"
        update: yes
      become: yes
      become_user: "{{lookup('env', 'USER')}}"
    - name: zshrc
      blockinfile:
        path: "{{lookup('env', 'HOME')}}/.zshrc"
        create: yes
        marker: "# {mark} base cfg"
        block: |
          # Enable colors and change prompt:
          autoload -U colors && colors
          PS1="%B%{$fg[red]%}[%{$fg[yellow]%}%n%{$fg[green]%}@%{$fg[blue]%}%M %{$fg[magenta]%}%~%{$fg[red]%}]%{$reset_color%}$%b "
          # Pure Prompt
          fpath+=$HOME/.zsh/pure
          autoload -U promptinit; promptinit
          prompt pure
          # History in cache directory:
          HISTSIZE=10000
          SAVEHIST=10000
          HISTFILE=~/.cache/zsh/history
          # Basic auto/tab complete:
          autoload -U compinit
          zstyle ':completion:*' menu select
          zmodload zsh/complist
          compinit
          _comp_options+=(globdots)               # Include hidden files.
          # Custom ZSH Binds
          bindkey '^ ' autosuggest-accept
          # Load ; should be last.
          source /usr/share/zsh-autosuggestions/zsh-autosuggestions.zsh 2>/dev/null
          source /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh 2>/dev/null
          source /usr/share/autojump/autojump.zsh 2>/dev/null
    - name: add .cfg load zsh
      blockinfile:
        path: "{{lookup('env', 'HOME')}}/.zshrc"
        create: yes
        marker: "# {mark} cfg loader"
        block: |
          for f in ${HOME}/.config/cfg/*cfg
          do
            source ${f}
          done
    - name: zshrc ownership
      file:
        path: "{{lookup('env', 'HOME')}}/.zshrc"
        group: "{{lookup('env', 'USER')}}"
        owner: "{{lookup('env', 'USER')}}"
    # snap store removal
    - name: remove snap-store
      snap:
        name: snap-store
        state: absent
    - name: gnome software store
      apt:
        name:
        - gnome-software
        - flatpak
        - gnome-software-plugin-flatpak
        - gnome-software-plugin-snap
        state: present
    # flatpak flathub repo
    - name: flatpak repo
      flatpak_remote:
        name: flathub
        state: present
        flatpakrepo_url: https://dl.flathub.org/repo/flathub.flatpakrepo
        method: user
    - name: downloaders
      apt:
        name:
        - curl
        - wget
        - aria2
        state: present
    - name: file utils
      apt:
        name:
        - mc
        - fdupes
        - tree
        - gddrescue
        - rename
        state: present
    - name: editor
      apt:
        name:
        - vim
        state: present
    - name: compression
      apt:
        name:
        - lzop
        - pigz
        - unrar
        - cabextract
        state: present
    - name: benchmarking
      apt:
        name:
        - fio
        - siege
        state: present
    - name: mail utils
      apt:
        name:
        - swaks
        state: present
    - name: remote file systems
      apt:
        name:
        - curlftpfs
        - sshfs
        - nfs-common
        - samba
        - cifs-utils
        - krb5-user
        state: present
    - name: network tools
      apt:
        name:
        - nmap
        - nmapsi4
        state: present
    - name: monitoring
      apt:
        name:
        - htop
        - nmon
        - tmux
        state: present
    - name: minicom config clear
      file:
        path: "{{lookup('env', 'HOME')}}/.minirc.dfl"
        state: absent
    - name: minicom config
      blockinfile:
        path: "{{lookup('env', 'HOME')}}/.minirc.dfl"
        create: yes
        marker: ""
        block: |
          pu port             /dev/ttyUSB0
          pu baudrate         38400
          pu bits             8
          pu parity           N
          pu stopbits         1
          pu rtscts           No
    - name: minicom config set ownership
      file:
        path: "{{lookup('env', 'HOME')}}/.minirc.dfl"
        group: "{{lookup('env', 'USER')}}"
        owner: "{{lookup('env', 'USER')}}"
    - name: minicom
      apt:
        name:
        - minicom
        state: present
    - name: add existing user "{{lookup('env','USER')}}" to tty,dialout
      user:
        name: "{{ lookup('env','USER') }}"
        groups: tty,dialout
        append: yes
